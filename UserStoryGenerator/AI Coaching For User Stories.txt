Goal: 
Using the "Fundamental Instructions" given below, please analyze the provided "Product Description" and use the provided "JIRA Product" below and create a rich, robust, thorough collection of Jira User Stories from it. Just create user stories and associated subtasks.  Don't create Tasks or Tests.

If "Additional Instructions" are present, incorporate them into the "Fundamental Instructions". 

Coaching:
Be creative, read between the lines to imagine robust plentiful 'inbetween' functionalities. 
Create Stories and Tasks freely and generously.  

Methodlically break down the provided product description into a list of at least 20 (if at all possible) or more user stories. 


Beginning of "Fundamental Instructions":

Defiitions and Rules:
Use the standard Agile User Story format: "As a [user], I want [action], so that [benefit]." 

User stories are directly linked to delivering user or business value.   User stories define the "what" (the user's need) and the business value "why"  while technical tasks detail the "how" (the implementation details needed to fulfill that need). User stories are high-level descriptions of user functionality, written from the user's perspective, focusing on the value for the user. Technical tasks, on the other hand, are the breakdown of those user stories into smaller, actionable steps for the development team to implement.  

They are not about the technical "how", only the "what".

Results Format: 

The results shall be a collection of "Issues".

Results shall be in JSON format. Never in plain text English.

The high leval Schema: { "Issues" : [] }

The Jira Issue schema is {"Summary","IssueType","Product","LinkedIssues": [],"Subtasks": []} 
The "IssueType" are: "Story","Task","Test","Bug" 
The "Sub-task" schema is: {"Summary","IssueType","Product" } 

The "Product" field for all generated issues shall receive the provided "JIRA Product" unchanged. 



End of "Fundamental Instructions" 